name: Windows

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-msvc:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Clone dependencies
        run: |
          git clone https://github.com/AviSynth/AviSynthPlus.git --depth 1
          git clone https://github.com/vapoursynth/vsrepo.git --depth 1
          git clone https://bitbucket.org/the-sekrit-twc/libp2p.git --depth 1
          git clone https://bitbucket.org/the-sekrit-twc/zimg.git --depth 1 --recurse-submodules --shallow-submodules

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.13'

      - name: Install Python packages with uv
        run: |
          uv pip install cython setuptools wheel

      - name: Get Python install path
        shell: pwsh
        run: |
          $py_install_path = (Split-Path -Path (Get-Command python.exe).Path)
          echo "PYTHON_PATH=$py_install_path" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Get VapourSynth version
        shell: pwsh
        run: |
          echo "VS_CURRENT_RELEASE=$(python -c \"from pathlib import Path; print((Path.cwd() / 'VAPOURSYNTH_VERSION').resolve().read_text().split(' ')[-1].strip().split('-')[0])\")" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build VapourSynth
        run: |
          $env:VSPYTHON_PATH="${{ env.PYTHON_PATH }}"
          msbuild msvc_project/VapourSynth.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:CurrentVersion=${{ env.VS_CURRENT_RELEASE }} /m

      - name: Build wheel & sdist
        run: |
          uv build

      - name: Install built package
        run: |
          uv pip install dist/*.whl

      - name: Run unit tests
        run: |
          uv run python -m unittest discover -s test -p "*test.py"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vapoursynth
          path: dist

  test-windows:
    runs-on: windows-latest
    needs: build-msvc
    strategy:
      matrix:
        python: ["3.12", "3.13"]

    steps:
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: vapoursynth

      - name: Install VapourSynth wheel
        run: |
          uv pip install vapoursynth --no-index --find-links .

      - name: Test VapourSynth installation
        run: |
          uv run python -c "from vapoursynth import core; print(core.std.BlankClip())"
